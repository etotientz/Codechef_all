#include<stdio.h>
#define MAX 100000
 
void mergeSort(int arr[],long long int low,long long int mid,long long int high);
void partition(int arr[],long long int low,long long int high);
 
int main(){
 
    int merge[MAX];
    long long int i,n,t;
 
    scanf("%d",&t);
     while(t>0)
     {
    //printf("Enter the total number of elements: ");
    scanf("%d",&n);
 
    //printf("Enter the elements which to be sort: ");
    for(i=0;i<n;i++){
         scanf("%d",&merge[i]);
    }
 
    partition(merge,0,n-1);
 
    long long int p=1;
  for(i=0;i<n-1;i++)
  {
  if(merge[i]!=merge[i+1])
  {
  p++;
  continue;
  }
  }
  printf("%lld\n",p);
 
   // printf("After merge sorting elements are: ");
   // for(i=0;i<n;i++){
        // printf("%d ",merge[i]);
    t--;
    }
 
   return 0;
}
 
void partition(int arr[],long long int low,long long int high){
 
    long long int mid;
 
    if(low<high){
         mid=(low+high)/2;
         partition(arr,low,mid);
         partition(arr,mid+1,high);
         mergeSort(arr,low,mid,high);
    }
}
 
void mergeSort(int arr[],long long int low,long long int mid,long long int high){
 
    long long int i,m,k,l,temp[MAX];
 
    l=low;
    i=low;
    m=mid+1;
 
    while((l<=mid)&&(m<=high)){
 
         if(arr[l]<=arr[m]){
             temp[i]=arr[l];
             l++;
         }
         else{
             temp[i]=arr[m];
             m++;
         }
         i++;
    }
 
    if(l>mid){
         for(k=m;k<=high;k++){
             temp[i]=arr[k];
             i++;
         }
    }
    else{
         for(k=l;k<=mid;k++){
             temp[i]=arr[k];
             i++;
         }
    }
 
    for(k=low;k<=high;k++){
         arr[k]=temp[k];
    }
}